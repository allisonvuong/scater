% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makePerCellDF.R
\name{makePerCellDF}
\alias{makePerCellDF}
\title{Create a per-cell data.frame from a SingleCellDataFrame}
\usage{
makePerCellDF(x, exprs_values = "logcounts", use_altexps = FALSE)
}
\arguments{
\item{x}{A \linkS4class{SingleCellExperiment} object.}

\item{exprs_values}{String or integer scalar indicating the assay to use to obtain expression values.
Must refer to a matrix-like object with integer or numeric values.}

\item{use_altexps}{Logical scalar indicating whether to extract assay/metadata values from \code{\link{altExps}(x)}.}
}
\value{
A data.frame containing one field per aspect of data in \code{x} - see Details.
Each row corresponds to a cell (i.e., column) of \code{x}.
}
\description{
Create a per-cell data.frame from a \linkS4class{SingleCellExperiment},
most typically for creating custom \pkg{ggplot2} plots.
}
\details{
This function enables us to conveniently create a per-cell data.frame from a \linkS4class{SingleCellExperiment}.
Each column of the returned data.frame corresponds to one aspect of the (meta)data, and are provided in the following order:
\enumerate{
\item Columns named according to \code{rownames(x)} represent the expression values for the \code{exprs_values} assay.
\item Columns named according to the columns of \code{colData(x)}, representing the column metadata variables.
\item Columns named according to \code{DIM.N}, containing the various dimensions in \code{\link{reducedDims}(x)}.
\code{DIM} is set to the name of the dimensionality reduction result and \code{N} is set to the specific dimension.
\item If \code{use_altexps=TRUE}, columns named according to the row names and column metadata fields of successive the alternative Experiments.
}
Nothing is done to resolve duplicated column names, which will often lead (correctly) to an error in downstream functions like \code{\link{ggplot}}.

For the columns derived from the assays and reduced dimensions,
the individual integer or numeric vectors are never actually constructed in the returned data.frame.
Rather, the ALTREP system is used to provide lazy evaluation where vectors are materialized from \code{x} on an as-needed basis.
This allows us to mimic the data.frame structure without materializing the values \emph{en masse},
thus avoiding problems due to loss of sparsity or delays from querying remote sources.
As a result, though, it is probably best to avoid \code{\link{print}}ing or \code{\link{saveRDS}}ing the data.frame or any derivative objects.
}
\examples{
example_sce <- mockSCE()
example_sce <- logNormCounts(example_sce)
example_sce <- runPCA(example_sce)

df <- makePerCellDF(example_sce)
head(colnames(df))
tail(colnames(df))

df$Gene_0001
df$Mutation_Status
df$PCA.1

}
\seealso{
\code{\link{retrieveCellInfo}}, which powers this function.
}
\author{
Aaron Lun
}
